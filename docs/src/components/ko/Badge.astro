---
import { Badge as AstroBadge } from "@astrojs/starlight/components";

type Props = {
  text?: string;
  variant?:
    | "default"
    | "instance"
    | "static"
    | "property"
    | "method"
    | "readonly"
    | "deprecated"
    | "decodeonly"
    | "encodable"
    | "standard";
  size?: "sm" | "md" | "lg";
};

const {
  variant = "default",
  text = ({
    default: "",
    instance: "인스턴스",
    static: "정적",
    property: "속성",
    method: "메서드",
    readonly: "읽기 전용",
    deprecated: "권장되지 않음",
    decodeonly: ">=decode-only",
    encodable: ">=encodable",
    standard: "=standard",
  } as const)[variant],
  size = "sm",
} = Astro.props;
---

<AstroBadge
  text={text}
  variant="default"
  size={({ sm: "small", md: "medium", lg: "large" } as const)[size]}
  class:list={["variant-" + variant]}
/>

<style>
  :global(:root) {
    --sdb-badge-default-bg: #333;
    --sdb-badge-default-border: #777;

    --sdb-badge-instance-bg: var(--sl-color-blue-low);
    --sdb-badge-instance-border: var(--sl-color-blue);

    --sdb-badge-static-bg: var(--sl-color-purple-low);
    --sdb-badge-static-border: var(--sl-color-purple);

    --sdb-badge-property-bg: var(--sl-color-green-low);
    --sdb-badge-property-border: var(--sl-color-green);

    --sdb-badge-method-bg: var(--sl-color-orange-low);
    --sdb-badge-method-border: var(--sl-color-orange);

    --sdb-badge-deprecated-bg: var(--sl-color-red-low);
    --sdb-badge-deprecated-border: var(--sl-color-red);
  }

  :global([data-theme="light"]:root) {
    --sdb-badge-default-bg: #444;
    --sdb-badge-instance-bg: var(--sl-color-blue-high);
    --sdb-badge-static-bg: var(--sl-color-purple-high);
    --sdb-badge-property-bg: var(--sl-color-green-high);
    --sdb-badge-method-bg: var(--sl-color-orange-high);
    --sdb-badge-deprecated-bg: var(--sl-color-red-high);
  }

  .variant-default,
  .variant-readonly,
  .variant-decodeonly,
  .variant-encodable,
  .variant-standard {
    --sl-color-bg-badge: var(--sdb-badge-default-bg);
    --sl-color-border-badge: var(--sdb-badge-default-border);
  }

  .variant-instance {
    --sl-color-bg-badge: var(--sdb-badge-instance-bg);
    --sl-color-border-badge: var(--sdb-badge-instance-border);
  }

  .variant-static {
    --sl-color-bg-badge: var(--sdb-badge-static-bg);
    --sl-color-border-badge: var(--sdb-badge-static-border);
  }

  .variant-property {
    --sl-color-bg-badge: var(--sdb-badge-property-bg);
    --sl-color-border-badge: var(--sdb-badge-property-border);
  }

  .variant-method {
    --sl-color-bg-badge: var(--sdb-badge-method-bg);
    --sl-color-border-badge: var(--sdb-badge-method-border);
  }

  .variant-deprecated {
    --sl-color-bg-badge: var(--sdb-badge-deprecated-bg);
    --sl-color-border-badge: var(--sdb-badge-deprecated-border);
  }
</style>
