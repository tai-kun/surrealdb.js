#!/usr/bin/env bash

KIND='(chore|docs|feat|fix|perf|refactor|release|revert|style|test)'
EXCLUDES=(
    'cache' '.cache'
    'temp' '.temp' 'tmp' '.tmp'
    '.git' '.history'
    '.Trash'
    'target' 'debug'
    'node_modules'
    'dist'
    'src'
)

function listup() {
    local dir="$1"
    local pfx=''
    local max=3
    local EXD
    local OPT
    local OPTARG
    local OPTIND=1
    local find_opts

    shift

    while getopts p:m: OPT; do
        case "$OPT" in
        p) pfx="$OPTARG" ;;
        m) max="$OPTARG" ;;
        *) exit 1 ;;
        esac
    done

    find_opts="-mindepth 1 -maxdepth $max -type d"

    for EXD in "${EXCLUDES[@]}"; do
        find_opts+=" ! \\( -name '$EXD' -o -path '*/$EXD/*' \\)"
    done

    (cd "$dir" && eval find . "$find_opts" | sed "s|^./|$pfx|" | sed 's|^[@#]||g' | paste -sd '|')
}

MSG="$1"

function match() {
    if [ "$(echo -n "$MSG" | grep -oP "$1")" != '' ]; then
        exit 0
    fi
}

function check() {
    local scope=''
    local i

    for i in "$@"; do
        if [ "$i" != '' ]; then
            if [ "$scope" = '' ]; then
                scope="$i"
            else
                scope="$scope|$i"
            fi
        fi
    done

    if [ "$scope" != '' ]; then
        match "^$KIND\((${scope//$/\\$})\): ."
    fi
}

match "^$KIND: ."
match "^ci: ."
match '^chore\(deps\): .'
match '^chore\(deps-dev\): .'
check "$(listup . -m 1)"
check "$(listup src)"
check "$(listup tests -p tests/)"
check "$(listup scripts -p scripts/)"

echo 'Invalid Commit Message'
exit 1
